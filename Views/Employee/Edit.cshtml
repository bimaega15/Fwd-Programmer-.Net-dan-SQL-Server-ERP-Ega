@model my_test_net.Models.Karyawan

@{
    ViewData["Title"] = string.IsNullOrEmpty(Model.Id) || Model.Id == "0" ? "Tambah Karyawan Baru" : "Edit Data Karyawan";
}

<div class="container mt-4">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card shadow">
                <div class="card-header bg-primary text-white">
                    <h4 class="mb-0">@(ViewData["Page"] == "add" ? "Tambah Karyawan Baru" : "Edit Data Karyawan")</h4>
                </div>
                <div class="card-body">
                    <form asp-action="Save" method="post" id="employeeForm">
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                        @if (ViewData["Page"] != null)
                        {
                            <input type="hidden" name="Page" value="@ViewData["Page"]" />
                        }

                        <div class="mb-3">
                            <label asp-for="Id" class="form-label">ID</label>
                            <input asp-for="Id" class="form-control" placeholder="Masukkan ID karyawan" maxlength="10" />
                            <small class="form-text text-muted">Maksimal 10 karakter</small>
                            <span asp-validation-for="Id" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label asp-for="Name" class="form-label">Nama Karyawan</label>
                            <input asp-for="Name" class="form-control" placeholder="Masukkan nama lengkap karyawan" />
                            <span asp-validation-for="Name" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label asp-for="JoinDate" class="form-label">Tanggal Masuk Kerja</label>
                            <input asp-for="JoinDate" class="form-control" type="date"
                                value="@(Model.JoinDate == default(DateTime) ? "2020-01-01" : Model.JoinDate.ToString("yyyy-MM-dd"))"
                                placeholder="Pilih tanggal masuk kerja" />
                            <span asp-validation-for="JoinDate" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label asp-for="Age" class="form-label">Usia</label>
                            <input asp-for="Age" class="form-control" type="number" min="18" max="65"
                                placeholder="Masukkan usia (18-65)" />
                            <span asp-validation-for="Age" class="text-danger"></span>
                        </div>

                        <div class="d-flex justify-content-between mt-4">
                            <a asp-action="Index" class="btn btn-secondary">
                                <i class="bi bi-arrow-left"></i> Kembali
                            </a>
                            <button type="submit" class="btn btn-success">
                                <i class="bi bi-save"></i> Simpan
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        $(document).ready(function () {
            // Additional client-side validation
            $('#employeeForm').submit(function (e) {
                let isValid = true;
                const id = $('#Id').val().trim();
                const name = $('#Name').val().trim();
                const joinDate = $('#JoinDate').val();
                const age = $('#Age').val();

                if (!id) {
                    $('#Id').next('.text-danger').text('ID karyawan harus diisi');
                    isValid = false;
                } else if (id.length > 10) { // Match this to your DB column size
                    $('#Id').next('.text-danger').text('ID karyawan maksimal 10 karakter');
                    isValid = false;
                }

                if (!name) {
                    $('#Name').next('.text-danger').text('Nama karyawan harus diisi');
                    isValid = false;
                }

                if (!joinDate) {
                    $('#JoinDate').next('.text-danger').text('Tanggal masuk kerja harus diisi');
                    isValid = false;
                }

                if (!age) {
                    $('#Age').next('.text-danger').text('Usia harus diisi');
                    isValid = false;
                } else if (age < 18 || age > 65) {
                    $('#Age').next('.text-danger').text('Usia harus antara 18 dan 65 tahun');
                    isValid = false;
                }

                if (!isValid) {
                    e.preventDefault();
                }
            });
        });
    </script>
}
